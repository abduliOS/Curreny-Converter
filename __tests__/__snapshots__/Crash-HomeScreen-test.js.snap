// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
Array [
  <View
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "alignItems": "center",
          "flexDirection": "column",
          "justifyContent": "center",
        },
        Object {
          "paddingHorizontal": 10,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "column",
              "justifyContent": "center",
            },
            Object {
              "paddingHorizontal": 10,
            },
          ],
        ]
      }
    >
      <Text
        style={
          Object {
            "color": "#212529",
            "fontSize": 36,
            "fontWeight": "bold",
          }
        }
      >
        Currency Converter
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Object {
            "paddingHorizontal": 10,
          },
          Object {
            "marginVertical": 30,
          },
          Object {
            "backgroundColor": "#E14032",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "margin": 10,
              "textAlign": "center",
            },
          ]
        }
      >
        Enter Amount
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        keyboardType="number-pad"
        onChangeText={[Function]}
        rejectResponderTermination={true}
        selectTextOnFocus={true}
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#212529",
              "borderWidth": 1,
              "color": "#212529",
              "marginBottom": 10,
              "marginTop": 10,
              "minHeight": 50,
              "padding": 10,
              "textAlign": "center",
            },
          ]
        }
        underlineColorAndroid="transparent"
        value="1"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "backgroundColor": "rgba(255,255,255,1)",
                    "borderRadius": 5,
                    "borderWidth": 1,
                    "elevation": 3,
                    "flexDirection": "row",
                    "marginBottom": 2,
                    "marginLeft": 18,
                    "marginRight": 10,
                    "paddingRight": 25,
                    "shadowColor": "#d3d3d3",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 1,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 10,
                    "width": 150,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#D3D3D3",
                      "flexDirection": "row",
                      "padding": 10,
                      "textAlign": "left",
                      "width": "99%",
                    }
                  }
                >
                  Currency $
                </Text>
                <Image
                  resizeMode="contain"
                  source="test-file-stub"
                  style={
                    Object {
                      "alignSelf": "center",
                      "height": 10,
                      "marginLeft": 10,
                      "width": 10,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          onShow={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0.3)",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "white",
                  "borderRadius": 10,
                  "maxHeight": "80%",
                  "width": "90%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "alignSelf": "flex-end",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": "100%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 18,
                      "marginLeft": 40,
                      "paddingBottom": 10,
                      "textAlign": "center",
                    }
                  }
                >
                   
                  Select Currency
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Image
                    resizeMode="contain"
                    source="test-file-stub"
                    style={
                      Object {
                        "alignItems": "flex-end",
                        "alignSelf": "flex-end",
                        "height": 40,
                        "justifyContent": "flex-start",
                        "marginRight": -7,
                        "marginTop": -4,
                        "width": 40,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "backgroundColor": "rgba(255,255,255,1)",
                    "borderRadius": 10,
                    "elevation": 3,
                    "flexDirection": "row",
                    "height": 40,
                    "marginBottom": 10,
                    "marginLeft": 10,
                    "marginRight": 10,
                    "shadowColor": "#d3d3d3",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 1,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 5,
                  }
                }
              >
                <TextInput
                  allowFontScaling={true}
                  blurOnSubmit={true}
                  keyboardType="default"
                  onChangeText={[Function]}
                  placeholder="Search....."
                  rejectResponderTermination={true}
                  returnKeyType="done"
                  style={
                    Object {
                      "alignSelf": "center",
                      "color": "black",
                      "flex": 1,
                      "marginBottom": 10,
                      "marginTop": 10,
                      "paddingLeft": 15,
                      "textAlign": "left",
                    }
                  }
                  underlineColorAndroid="transparent"
                />
              </View>
              <RCTScrollView
                ItemSeparatorComponent={[Function]}
                data={Array []}
                disableVirtualization={false}
                extraData={
                  Object {
                    "dataSource": Array [],
                    "modalVisible": false,
                    "selectedFlag": false,
                  }
                }
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                keyboardShouldPersistTaps="always"
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                overScrollMode="never"
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                showsVerticalScrollIndicator={false}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "maxHeight": "85%",
                    "minHeight": "35%",
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View />
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
          },
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          },
          Object {
            "paddingHorizontal": 10,
          },
          Object {
            "marginVertical": 30,
          },
          Object {
            "backgroundColor": "#E14032",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "margin": 10,
              "textAlign": "center",
            },
          ]
        }
      >
        Converted Amount
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={false}
        keyboardType="number-pad"
        onChangeText={[Function]}
        rejectResponderTermination={true}
        selectTextOnFocus={true}
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "#FFFFFF",
              "borderColor": "#212529",
              "borderWidth": 1,
              "color": "#212529",
              "marginBottom": 10,
              "marginTop": 10,
              "minHeight": 50,
              "padding": 10,
              "textAlign": "center",
            },
          ]
        }
        underlineColorAndroid="transparent"
        value="1"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flexDirection": "row",
            "justifyContent": "center",
          }
        }
      >
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "backgroundColor": "rgba(255,255,255,1)",
                    "borderRadius": 5,
                    "borderWidth": 1,
                    "elevation": 3,
                    "flexDirection": "row",
                    "marginBottom": 2,
                    "marginLeft": 18,
                    "marginRight": 10,
                    "paddingRight": 25,
                    "shadowColor": "#d3d3d3",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 1,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 10,
                    "width": 150,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#D3D3D3",
                      "flexDirection": "row",
                      "padding": 10,
                      "textAlign": "left",
                      "width": "99%",
                    }
                  }
                >
                  Currency $
                </Text>
                <Image
                  resizeMode="contain"
                  source="test-file-stub"
                  style={
                    Object {
                      "alignSelf": "center",
                      "height": 10,
                      "marginLeft": 10,
                      "width": 10,
                    }
                  }
                />
              </View>
            </View>
          </View>
        </View>
        <Modal
          animationType="none"
          hardwareAccelerated={false}
          onRequestClose={[Function]}
          onShow={[Function]}
          transparent={true}
          visible={false}
        >
          <View
            style={
              Object {
                "backgroundColor": "rgba(0,0,0,0.3)",
                "flex": 1,
                "justifyContent": "center",
              }
            }
          >
            <View
              style={
                Object {
                  "alignSelf": "center",
                  "backgroundColor": "white",
                  "borderRadius": 10,
                  "maxHeight": "80%",
                  "width": "90%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "flex-end",
                    "alignSelf": "flex-end",
                    "flexDirection": "row",
                    "justifyContent": "flex-end",
                    "width": "100%",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#000",
                      "flex": 1,
                      "fontSize": 18,
                      "marginLeft": 40,
                      "paddingBottom": 10,
                      "textAlign": "center",
                    }
                  }
                >
                   
                  Select Currency
                </Text>
                <View
                  accessible={true}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                >
                  <Image
                    resizeMode="contain"
                    source="test-file-stub"
                    style={
                      Object {
                        "alignItems": "flex-end",
                        "alignSelf": "flex-end",
                        "height": 40,
                        "justifyContent": "flex-start",
                        "marginRight": -7,
                        "marginTop": -4,
                        "width": 40,
                      }
                    }
                  />
                </View>
              </View>
              <View
                style={
                  Object {
                    "backgroundColor": "rgba(255,255,255,1)",
                    "borderRadius": 10,
                    "elevation": 3,
                    "flexDirection": "row",
                    "height": 40,
                    "marginBottom": 10,
                    "marginLeft": 10,
                    "marginRight": 10,
                    "shadowColor": "#d3d3d3",
                    "shadowOffset": Object {
                      "height": 1,
                      "width": 1,
                    },
                    "shadowOpacity": 1,
                    "shadowRadius": 5,
                  }
                }
              >
                <TextInput
                  allowFontScaling={true}
                  blurOnSubmit={true}
                  keyboardType="default"
                  onChangeText={[Function]}
                  placeholder="Search....."
                  rejectResponderTermination={true}
                  returnKeyType="done"
                  style={
                    Object {
                      "alignSelf": "center",
                      "color": "black",
                      "flex": 1,
                      "marginBottom": 10,
                      "marginTop": 10,
                      "paddingLeft": 15,
                      "textAlign": "left",
                    }
                  }
                  underlineColorAndroid="transparent"
                />
              </View>
              <RCTScrollView
                ItemSeparatorComponent={[Function]}
                data={Array []}
                disableVirtualization={false}
                extraData={
                  Object {
                    "dataSource": Array [],
                    "modalVisible": false,
                    "selectedFlag": false,
                  }
                }
                getItem={[Function]}
                getItemCount={[Function]}
                horizontal={false}
                initialNumToRender={10}
                keyExtractor={[Function]}
                keyboardShouldPersistTaps="always"
                maxToRenderPerBatch={10}
                onContentSizeChange={[Function]}
                onEndReachedThreshold={2}
                onLayout={[Function]}
                onMomentumScrollEnd={[Function]}
                onScroll={[Function]}
                onScrollBeginDrag={[Function]}
                onScrollEndDrag={[Function]}
                overScrollMode="never"
                removeClippedSubviews={false}
                renderItem={[Function]}
                scrollEventThrottle={50}
                showsVerticalScrollIndicator={false}
                stickyHeaderIndices={Array []}
                style={
                  Object {
                    "maxHeight": "85%",
                    "minHeight": "35%",
                  }
                }
                updateCellsBatchingPeriod={50}
                viewabilityConfigCallbackPairs={Array []}
                windowSize={21}
              >
                <View />
              </RCTScrollView>
            </View>
          </View>
        </Modal>
      </View>
    </View>
    <View />
    <Text
      style={
        Object {
          "color": "#212529",
          "fontSize": 14,
        }
      }
    >
      DarkMode : 
    </Text>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Auto
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Dark
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Light
        </Text>
      </View>
    </View>
  </View>,
  " ",
]
`;
